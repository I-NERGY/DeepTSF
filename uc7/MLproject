name: DeepTSF_workflow

conda_env: ../conda.yaml

entry_points:

  load_raw_data:
    parameters:
      series_csv: {type: str, default: None}
      series_uri: {type: str, default: None}
      past_covs_csv: {type: str, default: None}
      past_covs_uri: {type: str, default: None}
      future_covs_csv: {type: str, default: None}
      future_covs_uri: {type: str, default: None}
      day_first: {type: str, default: "true"}
      multiple: {type: str, default: "false"}
      resolution: {type: str, default: None}
      from_database: {type: str, default: "false"}
      database_name: {type: str, default: "rdn_load_data"}

    command: |
      python load_raw_data.py --series-csv {series_csv} --series-uri {series_uri} --day-first {day_first} --multiple {multiple} --resolution {resolution} --from-database {from_database} --database-name {database_name} --past-covs-csv {past_covs_csv} --past-covs-uri {past_covs_uri} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} 


  etl:
    parameters:
      series_csv: {type: str, default: None}
      series_uri: {type: str, default: None}
      resolution: {type: str, default: None}
      year_range: {type: str, default: None}
      time_covs: {type: str, default: "false"}
      day_first: {type: str, default: "true"}
      country: {type: str, default: "PT"}
      std_dev: {type: str, default: 4.5}
      max_thr: {type: str, default: -1}
      a: {type: str, default: 0.3}
      wncutoff: {type: str, default: 0.000694}
      ycutoff: {type: str, default: 3}
      ydcutoff: {type: str, default: 30}
      multiple: {type: str, default: "false"}
      imputation_method: {type: str, default : "linear"}
      order: {type: str, default : "1"}
      rmv_outliers: {type: str, default: "true"}
      convert_to_local_tz: {type: str, default: "true"}
      ts_used_id: {type: str, default: None}
      infered_resolution_series: {type: str, default: "15"}
      min_non_nan_interval: {type: str, default: "24"}
      cut_date_val: {type: str, default: None}
      infered_resolution_past: {type: str, default: "15"} 
      past_covs_csv: {type: str, default: None} 
      past_covs_uri: {type: str, default: None}
      infered_resolution_future: {type: str, default: "15"} 
      future_covs_csv: {type: str, default: None} 
      future_covs_uri: {type: str, default: None}
      resampling_agg_method: {type: str, default: "averaging"}
    command: |
      python etl.py --series-csv {series_csv} --series-uri {series_uri} --resolution {resolution} --year-range {year_range} --time-covs {time_covs} --day-first {day_first} --country {country} --std-dev {std_dev} --max-thr {max_thr} --a {a} --wncutoff {wncutoff} --ycutoff {ycutoff} --ydcutoff {ydcutoff} --multiple {multiple} --imputation-method {imputation-method} --order {order} --rmv-outliers {rmv_outliers} --convert-to-local-tz {convert_to_local_tz} --ts-used-id {ts_used_id} --infered-resolution-series {infered_resolution_series} --min-non-nan-interval {min_non_nan_interval} --cut-date-val {cut_date_val} --past-covs-csv {past_covs_csv} --past-covs-uri {past_covs_uri} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} --infered-resolution-past {infered_resolution_past}  --past-covs-csv {past_covs_csv} --past-covs-uri {past_covs_uri} --infered-resolution-future {infered_resolution_future} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} --resampling-agg-method {resampling_agg_method}

  train:
    parameters:
      series_csv: {type: str, default: None}
      series_uri: {type: str, default: None}
      future_covs_csv: {type: str, default: None}
      future_covs_uri: {type: str, default: None}
      past_covs_csv: {type: str, default: None}
      past_covs_uri: {type: str, default: None}
      cut_date_val: {type: str, default: None}
      cut_date_test: {type: str, default: None}
      test_end_date: {type: str, default: None}
      darts_model: {type: str, default: None}
      device: {type: str, default: gpu}
      hyperparams_entrypoint: {type: str, default: None}
      scale: {type: str, default: "true"}
      scale_covs: {type: str, default: "true"}
      multiple: {type: str, default: "false"}
      training_dict: {type: str, default: None}
      num_workers: {type: str, default: 4}
      day_first: {type: str, default: "true"}
      resolution: {type: str, default: None}
      pv_ensemble: {type: str, default: "false"}

    command: |
      python ../training.py --series-csv {series_csv} --series-uri {series_uri} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} --past-covs-csv {past_covs_csv}  --past-covs-uri {past_covs_uri} --cut-date-val {cut_date_val} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --darts-model {darts_model} --device {device} --hyperparams-entrypoint {hyperparams_entrypoint} --scale {scale} --scale-covs {scale_covs} --multiple {multiple} --training-dict {training_dict} --cut-date-val {cut_date_val} --num-workers {num_workers} --day-first {day_first} --resolution {resolution} --pv-ensemble {pv_ensemble}

  eval:
    parameters:
      mode: {type: str, default: remote}
      series_uri: {type: str, default: None}
      future_covs_uri: {type: str, default: None}
      past_covs_uri: {type: str, default: None}
      scaler_uri: {type: str, default: None}
      cut_date_test: {type: str, default: None}
      test_end_date: {type: str, default: None}
      model_uri: {type: str, default: None}
      model_type: {type: str, default: pl}
      forecast_horizon: {type: str, default: None}
      stride: {type: str, default: None}
      retrain: {type: str, default: "false"}
      shap_input_length: {type: str, default: None}
      shap_output_length: {type: str, default: None}
      size: {type: str, default: 10}
      analyze_with_shap: {type: str, default: "false"}
      multiple: {type: str, default: "false"}
      eval_series: {type: str, default: None}
      cut_date_val: {type: str, default: None}
      day_first: {type: str, default: "true"}
      resolution: {type: str, default: None}
      eval_method: {type: str, default: "ts_ID"}
      evaluate_all_ts: {type: str, default: "false"}
      m_mase: {type: str, default: "1"}
      num_samples: {type: str, default: "1"}
      pv_ensemble: {type: str, default: "false"}

    command: |
      python ../evaluate_forecasts.py --mode {mode} --series-uri {series_uri} --future-covs-uri {future_covs_uri} --model-type {model_type} --past-covs-uri {past_covs_uri} --scaler-uri {scaler_uri} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --model-uri {model_uri} --forecast-horizon {forecast_horizon} --stride {stride} --retrain {retrain} --shap-input-length {shap_input_length} --shap-output-length {shap_output_length} --size {size} --analyze-with-shap {analyze_with_shap} --multiple {multiple} --eval-series {eval_series} --cut-date-val {cut_date_val} --day-first {day_first} --resolution {resolution} --eval-method {eval_method} --evaluate-all-ts {evaluate_all_ts} --m-mase {m_mase} --num-samples {num_samples} --pv-ensemble {pv_ensemble}


  optuna_search:
    parameters:
      series_csv: {type: str, default: None}
      series_uri: {type: str, default: None}
      future_covs_csv: {type: str, default: None}
      future_covs_uri: {type: str, default: None}
      past_covs_csv: {type: str, default: None}
      past_covs_uri: {type: str, default: None}
      resolution: {type: str, default: None}
      year_range: {type: str, default: None}
      darts_model: {type: str, default: None}
      hyperparams_entrypoint: {type: str, default: None}
      cut_date_val: {type: str, default: None}
      cut_date_test: {type: str, default: None}
      test_end_date: {type: str, default: None}
      device: {type: str, default: gpu}
      forecast_horizon: {type: str, default: None}
      stride: {type: str, default: None}
      retrain: {type: str, default: false}
      scale: {type: str, default: "true"}
      scale_covs: {type: str, default: "true"}
      multiple: {type: str, default: "false"}
      eval_series: {type: str, default: None}
      n_trials: {type: str, default: 100}
      num_workers: {type: str, default: 4}
      day_first: {type: str, default: "true"}
      eval_method: {type: str, default: "ts_ID"}
      loss_function: {type: str, default: "mape"}
      evaluate_all_ts: {type: str, default: "false"}
      grid_search: {type: str, default: "false"}
      num_samples: {type: str, default: "1"}
      pv_ensemble: {type: str, default: "false"}

    command: |
      python ../optuna_search.py --series-csv {series_csv} --series-uri {series_uri} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} --past-covs-csv {past_covs_csv}  --past-covs-uri {past_covs_uri} --resolution {resolution} --year-range {year_range} --darts-model {darts_model} --hyperparams-entrypoint {hyperparams_entrypoint} --cut-date-val {cut_date_val} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --device {device} --forecast-horizon {forecast_horizon} --stride {stride} --retrain {retrain} --scale {scale} --scale-covs {scale_covs} --multiple {multiple} --eval-series {eval_series} --n-trials {n_trials} --num-workers {num_workers} --day-first {day_first} --eval-method {eval_method} --loss-function {loss_function} --evaluate-all-ts {evaluate_all_ts} --grid-search {grid_search} --num-samples {num_samples} --pv-ensemble {pv_ensemble}



  exp_pipeline:
    parameters:
      series_csv: {type: str, default: None}
      series_uri: {type: str, default: None}
      past_covs_csv: {type: str, default: None}
      past_covs_uri: {type: str, default: None}
      future_covs_csv: {type: str, default: None}
      future_covs_uri: {type: str, default: None}
      resolution: {type: str, default: None}
      year_range: {type: str, default: None}
      time_covs: {type: str, default: "false"}
      hyperparams_entrypoint: {type: str, default: None}
      cut_date_val: {type: str, default: None}
      cut_date_test: {type: str, default: None}
      test_end_date: {type: str, default: None}
      darts_model: {type: str, default: None}
      device: {type: str, default: gpu}
      forecast_horizon: {type: str, default: None}
      stride: {type: str, default: None}
      retrain: {type: str, default: false}
      ignore_previous_runs: {type: str, default: "true"}
      scale: {type: str, default: "true"}
      scale_covs: {type: str, default: "true"}
      day_first: {type: str, default: "true"}
      country: {type: str, default: "PT"}
      std_dev: {type: str, default: 4.5}
      max_thr: {type: str, default: -1}
      a: {type: str, default: 0.3}
      wncutoff: {type: str, default: 0.000694}
      ycutoff: {type: str, default: 3}
      ydcutoff: {type: str, default: 30}
      shap_data_size: {type: str, default: 100}
      analyze_with_shap: {type: str, default: false}
      multiple: {type: str, default: "false"}
      eval_series: {type: str, default: None}
      n_trials: {type: str, default: 100}
      opt_test: {type: str, default: "false"}
      from_database: {type: str, default: "false"}
      database_name: {type: str, default: "rdn_load_data"}
      num_workers: {type: str, default: 4}
      eval_method: {type: str, default: "ts_ID"}
      imputation_method: {type: str, default : "linear"}
      order: {type: str, default : "1"}
      rmv_outliers: {type: str, default: "true"}
      loss_function: {type: str, default: "mape"}
      evaluate_all_ts: {type: str, default: "false"}
      convert_to_local_tz: {type: str, default: "true"}
      grid_search: {type: str, default: "false"}
      shap_input_length: {type: str, default: None}
      ts_used_id: {type: str, default: None}
      m_mase: {type: str, default: "1"}
      min_non_nan_interval: {type: str, default: "24"}
      num_samples: {type: str, default: "1"}
      resampling_agg_method: {type: str, default: "averaging"}
      pv_ensemble: {type: str, default: "false"}

    command: |
      python ../experimentation_pipeline.py --series-csv {series_csv} --series-uri {series_uri} --resolution {resolution} --year-range {year_range} --time-covs {time_covs} --cut-date-val {cut_date_val} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --darts-model {darts_model} --device {device} --hyperparams-entrypoint {hyperparams_entrypoint} --forecast-horizon {forecast_horizon} --stride {stride} --retrain {retrain} --ignore-previous-runs {ignore_previous_runs} --scale {scale} --scale-covs {scale_covs} --day-first {day_first} --country {country} --std-dev {std_dev} --max-thr {max_thr} --a {a} --wncutoff {wncutoff} --ycutoff {ycutoff} --ydcutoff {ydcutoff} --shap-data-size {shap_data_size} --analyze-with-shap {analyze_with_shap} --multiple {multiple} --eval-series {eval_series} --n-trials {n_trials} --opt-test {opt_test} --from-database {from_database} --database-name {database_name} --num-workers {num_workers} --eval-method {eval_method} --imputation-method {imputation-method} --order {order} --rmv-outliers {rmv_outliers} --loss-function {loss_function} --evaluate-all-ts {evaluate_all_ts} --convert-to-local-tz {convert_to_local_tz} --grid-search {grid_search} --shap-input-length {shap_input_length} --ts-used-id {ts_used_id} --m-mase {m_mase} --min-non-nan-interval {min_non_nan_interval} --past-covs-csv {past_covs_csv} --past-covs-uri {past_covs_uri} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} --num-samples {num_samples} --resampling-agg-method {resampling_agg_method} --pv-ensemble {pv_ensemble}


  inference:
    parameters:
      pyfunc_model_folder: {type: str, default: s3://mlflow-bucket/2/33d85746285c42a7b3ef403eb2f5c95f/artifacts/pyfunc_model}
      forecast_horizon:  {type: str, default: None}
      series_uri: {type: str, default: None}
      past_covariates_uri: {type: str, default: None}
      future_covariates_uri: {type: str, default: None}
      roll_size: {type: str, default: 96}
      batch_size:  {type: str, default: 1}

    command: |
      python ../inference.py --pyfunc-model-folder {pyfunc_model_folder} --forecast-horizon {forecast_horizon} --series-uri {series_uri} --past-covariates-uri {past_covariates_uri} --future-covariates-uri {future_covariates_uri} --roll-size {roll_size} --batch-size {batch_size}