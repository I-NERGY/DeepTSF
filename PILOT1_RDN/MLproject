name: rdn_workflow

conda_env: conda.yaml

entry_points:

  load_raw_data:
    parameters:
      series_csv: {type: str, default: ../../RDN/Load_Data/2009-2021-global-load.csv}
      series_uri: {type: str, default: online_artifact}
      day_first: {type: str, default: "true"}
      multiple: {type: str, default: "false"}
      resolution: {type: str, default: 15}

    command: |
      python load_raw_data.py --series-csv {series_csv} --series-uri {series_uri} --day-first {day_first} --multiple {multiple} --resolution {resolution}

  etl:
    parameters:
      series_csv: {type: str, default: ../../RDN/Load_Data/2009-2021-global-load.csv}
      series_uri: {type: str, default: mlflow_artifact_uri}
      resolution: {type: str, default: 15}
      year_range: {type: str, default: None}
      time_covs: {type: str, default: PT}
      day_first: {type: str, default: "true"}
      country: {type: str, default: "Portugal"}
      std_dev: {type: str, default: 4.5}
      max_thr: {type: str, default: 48}
      a: {type: str, default: 0.3}
      wncutoff: {type: str, default: 0.000694}
      ycutoff: {type: str, default: 3}
      ydcutoff: {type: str, default: 30}
      multiple: {type: str, default: "false"}
    command: |
      python etl.py --series-csv {series_csv} --series-uri {series_uri} --resolution {resolution} --year-range {year_range} --time-covs {time_covs} --day-first {day_first} --country {country} --std-dev {std_dev} --max-thr {max_thr} --a {a} --wncutoff {wncutoff} --ycutoff {ycutoff} --ydcutoff {ydcutoff} --multiple {multiple}

  train:
    parameters:
      series_csv: {type: str, default: ../../RDN/Load_Data/series.csv}
      series_uri: {type: str, default: mlflow_artifact_uri}
      future_covs_csv: {type: str, default: None}
      future_covs_uri: {type: str, default: mlflow_artifact_uri}
      past_covs_csv: {type: str, default: None}
      past_covs_uri: {type: str, default: mlflow_artifact_uri}
      cut_date_val: {type: str, default: 20200101}
      cut_date_test: {type: str, default: 20210101}
      test_end_date: {type: str, default: None}
      darts_model: {type: str, default: RNN}
      device: {type: str, default: gpu}
      hyperparams_entrypoint: {type: str, default: LSTM1}
      scale: {type: str, default: "true"}
      scale_covs: {type: str, default: "true"}
      multiple: {type: str, default: "false"}
      training_dict: {type: str, default: "None"}
    command: |
      python training.py --series-csv {series_csv} --series-uri {series_uri} --future-covs-csv {future_covs_csv} --future-covs-uri {future_covs_uri} --past-covs-csv {past_covs_csv}  --past-covs-uri {past_covs_uri} --cut-date-val {cut_date_val} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --darts-model {darts_model} --device {device} --hyperparams-entrypoint {hyperparams_entrypoint} --scale {scale} --scale-covs {scale_covs} --multiple {multiple} --training-dict {training_dict} --cut-date-val {cut_date_val}

  eval:
    parameters:
      mode: {type: str, default: remote}
      series_uri: {type: str, default: mlflow_artifact_uri}
      future_covs_uri: {type: str, default: mlflow_artifact_uri}
      past_covs_uri: {type: str, default: mlflow_artifact_uri}
      scaler_uri: {type: str, default: mlflow_artifact_uri}
      cut_date_test: {type: str, default: 20210101}
      test_end_date: {type: str, default: None}
      model_uri: {type: str, default: mlflow_artifact_uri}
      model_type: {type: str, default: pl}
      forecast_horizon: {type: str, default: 96}
      stride: {type: str, default: None}
      retrain: {type: str, default: "false"}
      input_chunk_length: {type: str, default: None}
      output_chunk_length: {type: str, default: None}
      size: {type: str, default: 10}
      analyze_with_shap: {type: str, default: "false"}
      multiple: {type: str, default: "false"}
      eval_country: {type: str, default: "Portugal"}
      cut_date_val: {type: str, default: 20210101}

    command: |
      python evaluate_forecasts.py --mode {mode} --series-uri {series_uri} --future-covs-uri {future_covs_uri} --model-type {model_type} --past-covs-uri {past_covs_uri} --scaler-uri {scaler_uri} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --model-uri {model_uri} --forecast-horizon {forecast_horizon} --stride {stride} --retrain {retrain} --input-chunk-length {input_chunk_length} --output-chunk-length {output_chunk_length} --size {size} --analyze-with-shap {analyze_with_shap} --multiple {multiple} --eval-country {eval_country} --cut-date-val {cut_date_val}


  optuna_search:
    parameters:
      series_uri: {type: str, default: online_artifact}
      future_covs_uri: {type: str, default: mlflow_artifact_uri}
      resolution: {type: str, default: 15}
      year_range: {type: str, default: None}
      time_covs: {type: str, default: PT}
      darts_model: {type: str, default: RNN}
      hyperparams_entrypoint: {type: str, default: LSTM1}
      cut_date_val: {type: str, default: 20180101}
      cut_date_test: {type: str, default: 20190101}
      test_end_date: {type: str, default: None}
      device: {type: str, default: gpu}
      forecast_horizon: {type: str, default: 96}
      stride: {type: str, default: None}
      retrain: {type: str, default: false}
      scale: {type: str, default: "true"}
      scale_covs: {type: str, default: "true"}
      multiple: {type: str, default: "false"}
      eval_country: {type: str, default: "Portugal"}
      n_trials: {type: str, default: 100}
    command: |
      python optuna_search.py --series-uri {series_uri} --future-covs-uri {future_covs_uri} --resolution {resolution} --year-range {year_range} --time-covs {time_covs} --darts-model {darts_model} --hyperparams-entrypoint {hyperparams_entrypoint} --cut-date-val {cut_date_val} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --device {device} --forecast-horizon {forecast_horizon} --stride {stride} --retrain {retrain} --scale {scale} --scale-covs {scale_covs} --multiple {multiple} --eval-country {eval_country} --n-trials {n_trials}


  exp_pipeline:
    parameters:
      series_csv: {type: str, default: ../../RDN/Load_Data/2009-2021-global-load.csv}
      series_uri: {type: str, default: online_artifact}
      resolution: {type: str, default: 15}
      year_range: {type: str, default: None}
      time_covs: {type: str, default: PT}
      hyperparams_entrypoint: {type: str, default: LSTM1}
      cut_date_val: {type: str, default: 20180101}
      cut_date_test: {type: str, default: 20190101}
      test_end_date: {type: str, default: None}
      darts_model: {type: str, default: RNN}
      device: {type: str, default: gpu}
      forecast_horizon: {type: str, default: 96}
      stride: {type: str, default: None}
      retrain: {type: str, default: false}
      ignore_previous_runs: {type: str, default: "true"}
      scale: {type: str, default: "true"}
      scale_covs: {type: str, default: "true"}
      day_first: {type: str, default: "true"}
      country: {type: str, default: "Portugal"}
      std_dev: {type: str, default: 4.5}
      max_thr: {type: str, default: 48}
      a: {type: str, default: 0.3}
      wncutoff: {type: str, default: 0.000694}
      ycutoff: {type: str, default: 3}
      ydcutoff: {type: str, default: 30}
      shap_data_size: {type: str, default: 10}
      analyze_with_shap: {type: str, default: false}
      multiple: {type: str, default: "false"}
      eval_country: {type: str, default: "Portugal"}
      n_trials: {type: str, default: 100}
      opt_test: {type: str, default: "false"}

    command: |
      python experimentation_pipeline.py --series-csv {series_csv} --series-uri {series_uri} --resolution {resolution} --year-range {year_range} --time-covs {time_covs} --cut-date-val {cut_date_val} --cut-date-test {cut_date_test} --test-end-date {test_end_date} --darts-model {darts_model} --device {device} --hyperparams-entrypoint {hyperparams_entrypoint} --forecast-horizon {forecast_horizon} --stride {stride} --retrain {retrain} --ignore-previous-runs {ignore_previous_runs} --scale {scale} --scale-covs {scale_covs} --day-first {day_first} --country {country} --std-dev {std_dev} --max-thr {max_thr} --a {a} --wncutoff {wncutoff} --ycutoff {ycutoff} --ydcutoff {ydcutoff} --shap-data-size {shap_data_size} --analyze-with-shap {analyze_with_shap} --multiple {multiple} --eval-country {eval_country} --n-trials {n_trials} --opt-test {opt_test}

  inference:
    parameters:
      pyfunc_model_folder: {type: str, default: s3://mlflow-bucket/2/33d85746285c42a7b3ef403eb2f5c95f/artifacts/pyfunc_model}
      forecast_horizon:  {type: str, default: 960}
      series_uri: {type: str, default: ENG/series.csv}
      past_covariates_uri: {type: str, default: "None"}
      future_covariates_uri: {type: str, default: "None"}
      roll_size: {type: str, default: 96}
      batch_size:  {type: str, default: 1}

    command: |
      python inference.py --pyfunc-model-folder {pyfunc_model_folder} --forecast-horizon {forecast_horizon} --series-uri {series_uri} --past-covariates-uri {past_covariates_uri} --future-covariates-uri {future_covariates_uri} --roll-size {roll_size} --batch-size {batch_size}
