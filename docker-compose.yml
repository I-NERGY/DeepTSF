version: '3.3'

services:

  backend:
    container_name: DeepTSF-backend
    hostname: DeepTSF-backend
    #image: pelekhs/load-forecasting-pipeline:0.1
    build: .
    restart: always
    ports:
      - '8080:8080'
    expose:
      - '8080'
    stdin_open: true
    env_file:
      - .env
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    networks:
       - load-forecasting-net

  dagster:
    container_name: DeepTSF--dagster-orchestrator
    hostname: DeepTSF--dagster-orchestrator
    build:
      context: .
      dockerfile: ./dagster-deeptsf/config/Dockerfile
    env_file:
      - ./dagster-deeptsf/config/.env
    expose:
      - 8006
    ports:
      - "8006:8006"
    volumes:
      - ./dagster-deeptsf:/app/dagster-deeptsf
#      - ./uc2:/app/uc2
    networks:
      - load-forecasting-net

  # frontend:
  #   container_name: load-forecasting-dashboard
  #   hostname: load-forecasting-dashboard
  #   # image: korbakis/load-forecasting-dashboard:0.1
  #   restart: always
  #   # build: ./load-forecasting-dashboard
  #   build: https://github.com/I-NERGY/DeepTSF.git
  #   # volumes: # this bind mount is maybe redundant?
  #   #   - ./src:/app/src # check if this works like that. relative paths are inside the build directory or the current directory?
  #   ports:
  #     - '3000:3000'
  #   stdin_open: true
  #   env_file:
  #     - .env # needs to add all variables of the front-end env_file to the current .env
  #   # environment:
  #   #   CHOKIDAR_USEPOLLING: true
  #   #   REACT_APP_NAME: Load_Forecasting_Dashboard
  #   networks:
  #     - load-forecasting-net

networks: 
  load-forecasting-net:
    external: true
